# Generated by Django 5.1.7 on 2025-03-26 10:38

import apps.address_registry.models
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Dokumentas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numeris', models.CharField(max_length=255)),
                ('priimta', models.DateField()),
                ('rusis', models.CharField(choices=apps.address_registry.models.get_dokumento_rusis, max_length=255)),
                ('pozymis', models.CharField(choices=apps.address_registry.models.get_dokumento_pozymis, max_length=255)),
                ('sukurimo_data', models.DateField()),
                ('sukurimo_laikas', models.TimeField()),
            ],
            options={
                'verbose_name': 'Dokumentas',
                'verbose_name_plural': 'Dokumentai',
            },
        ),
        migrations.CreateModel(
            name='Organizacija',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Organizacija',
                'verbose_name_plural': 'Organizacijos',
            },
        ),
        migrations.CreateModel(
            name='Salis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kodas', models.CharField(max_length=20)),
                ('pavadinimas', models.CharField(max_length=255)),
                ('pavadinimas_lt', models.CharField(max_length=255)),
                ('pavadinimas_en', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Šalis',
                'verbose_name_plural': 'Šalys',
            },
        ),
        migrations.CreateModel(
            name='DokumentoAutorius',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vardas', models.CharField(max_length=255)),
                ('pavarde', models.CharField(max_length=255)),
                ('dokumentas', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='address_registry.dokumentas')),
            ],
            options={
                'verbose_name': 'Dokumento autorius',
                'verbose_name_plural': 'Dokumento autoriai',
            },
        ),
        migrations.CreateModel(
            name='JuridinisAsmuo',
            fields=[
                ('organizacija_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='address_registry.organizacija')),
                ('pavadinimas', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Juridinis asmuo',
                'verbose_name_plural': 'Juridiniai asmenys',
            },
            bases=('address_registry.organizacija',),
        ),
        migrations.CreateModel(
            name='NejuridinisAsmuo',
            fields=[
                ('organizacija_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='address_registry.organizacija')),
                ('pavadinimas', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Nejuridinis asmuo',
                'verbose_name_plural': 'Nejuridiniai asmenys',
            },
            bases=('address_registry.organizacija',),
        ),
        migrations.CreateModel(
            name='Gyvenviete',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isregistruota', models.DateField()),
                ('registruota', models.DateField()),
                ('pavadinimas', models.CharField(max_length=255)),
                ('kurortas', models.BooleanField()),
                ('plotas', models.FloatField()),
                ('tipas', models.CharField(choices=apps.address_registry.models.get_vietoves_tipai)),
                ('salies_kodas', models.CharField(blank=True, help_text='Turi sutapti su Salis.kodas', max_length=20)),
                ('salis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='address_registry.salis')),
            ],
            options={
                'verbose_name': 'Gyvenviete',
                'verbose_name_plural': 'Gyvenvietes',
            },
        ),
        migrations.CreateModel(
            name='Apskritis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('tipas', models.CharField(choices=apps.address_registry.models.get_administracinio_vieneto_tipai, max_length=255)),
                ('kodas', models.IntegerField(null=True, unique=True)),
                ('iregistruota', models.DateTimeField(null=True)),
                ('isregistruota', models.DateTimeField(null=True)),
                ('pavadinimas', models.CharField(max_length=255)),
                ('plotas', models.IntegerField(null=True)),
                ('salies_kodas', models.CharField(blank=True, help_text='Turi sutapti su Salis.kodas', max_length=20)),
                ('dokumentai', models.ManyToManyField(blank=True, to='address_registry.dokumentas')),
                ('centras', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='address_registry.gyvenviete')),
                ('salis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='address_registry.salis')),
            ],
            options={
                'verbose_name': 'Apskritis',
                'verbose_name_plural': 'Apskritys',
            },
        ),
        migrations.CreateModel(
            name='Savivaldybe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('tipas', models.CharField(choices=apps.address_registry.models.get_administracinio_vieneto_tipai, max_length=255)),
                ('kodas', models.IntegerField(null=True, unique=True)),
                ('iregistruota', models.DateTimeField(null=True)),
                ('isregistruota', models.DateTimeField(null=True)),
                ('pavadinimas', models.CharField(max_length=255)),
                ('plotas', models.IntegerField(null=True)),
                ('salies_kodas', models.CharField(blank=True, help_text='Turi sutapti su Salis.kodas', max_length=20)),
                ('apskritis', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='address_registry.apskritis')),
                ('centras', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='address_registry.gyvenviete')),
                ('dokumentai', models.ManyToManyField(blank=True, to='address_registry.dokumentas')),
                ('salis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='address_registry.salis')),
            ],
            options={
                'verbose_name': 'Savivaldybė',
                'verbose_name_plural': 'Savivaldybės',
            },
        ),
        migrations.CreateModel(
            name='Seniunija',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('tipas', models.CharField(choices=apps.address_registry.models.get_administracinio_vieneto_tipai, max_length=255)),
                ('kodas', models.IntegerField(null=True, unique=True)),
                ('iregistruota', models.DateTimeField(null=True)),
                ('isregistruota', models.DateTimeField(null=True)),
                ('pavadinimas', models.CharField(max_length=255)),
                ('plotas', models.IntegerField(null=True)),
                ('salies_kodas', models.CharField(blank=True, help_text='Turi sutapti su Salis.kodas', max_length=20)),
                ('centras', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='address_registry.gyvenviete')),
                ('dokumentai', models.ManyToManyField(blank=True, to='address_registry.dokumentas')),
                ('salis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='address_registry.salis')),
                ('savivaldybe', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='address_registry.savivaldybe')),
            ],
            options={
                'verbose_name': 'Seniūnija',
                'verbose_name_plural': 'Seniūnijos',
            },
        ),
        migrations.CreateModel(
            name='Pavadinimas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pavadinimas', models.CharField(max_length=255)),
                ('kirciuotas', models.CharField(max_length=255)),
                ('linksnis', models.CharField(choices=apps.address_registry.models.get_linksniai, max_length=255)),
                ('gyvenviete', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pavadinimo_formos', to='address_registry.gyvenviete')),
            ],
            options={
                'verbose_name': 'Pavadinimas',
                'verbose_name_plural': 'Pavadinimai',
                'constraints': [models.UniqueConstraint(fields=('gyvenviete', 'linksnis'), name='unique_gyvenvietes_linksnis')],
            },
        ),
    ]
